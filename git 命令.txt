git 命令
《Git权威指南》
目录  页码+30  ,目录第一页： 28+13, 28+页码
0. 安装和使用Git  -cygWin（p59）

1、查看windows的磁盘路径
--68   mount

2、cygpath 改变Windows目录与cygwin中的目录切换

 p66   cygpath  -u g:   (例如：cygpath -u  c：\\windowns)
       cygpath -w ~/

3、查看运行环境的字符集
--68   locale
       git status -s
       git config --global core.quotepath false

4、安装 msysGit（  P73 ）

5、Cygwin 软件版本号（P66）
 cygcheck -c cygwin

 6、创建版本库（P86）
   git -version
   git config --global user.name ""
   git config --global user.email "48128489@qq.com"
    设置一些Git的别名
     sudo git config --system alias.st status
     本用户的全局别名设置
     git config --global alias.st status
     开启颜色显示
      git config --global color.ui true

      创建初始化库  P87

      显示版本库.git目录所在的位置 P90
      git rev-parse --git-dir

      显示工作区根目录 p90
      Git rev-parse --show-toplevel

      相对于工作区根目录的相对目录
       git rev-parse --show-prefix

      显示从当前目录（cd）后退（up）到工作区的根的深度
      git rev-parse --show-cdup

      git config命令的各参数有何区别 p91

      编辑config文件命令
      git config -e
      git config --system
      git config --global

      查看config文件
      cat

      读取config文件
     命令格式： git config <section>.<key>
      git config core.bare

-----在文件名和路径名中包含中文的时候， git status 的显示是这样的  "\344\275\240\345\245\275.txt"：告诉 git 不对 0x80 以上的字符进行转义即可使用如下设置(http://blog.csdn.net/wty__/article/details/53997786)
      git config --global core.quotepath fasle




      查看当前用户及邮箱 p93
      git config user.name
      git config user.email

      Git别名设置 p96
      git config --global alias.ci "commit -s"

利用命令“ssh-keygen -t rsa -C "48128489@qq.com" 生成SSH密匙（id_rsa和id_rsa.pub）后
ssh 测试
ssh -t git@github.com

$ ssh -i ~/.ssh/id_rsa git@github.com

(4)补充
①SSH配置文件ssh_config在自己本地的路径：
    C:\Users\Administrator\AppData\Local\GitHub\PortableGit_6d98349f44ba975cf6c762a720f8259a267ea445\etc\ssh
②密匙文件的存放路径：
    C:\Users\Administrator\.ssh
③ssh_config的原文件（有误的版本）：
Host *
StrictHostKeyChecking no
UserKnownHostsFile=/dev/null


Host github.com
StrictHostKeyChecking no
UserKnownHostsFile=/dev/null
IdentityFile=~/.ssh/github_rsa ④重装Github for windows 2.0后的新发现（重要）。
    为了确保正确性，自己将本机的Github for Window 2.0卸载并且重装了一遍，发现SSH的配置文件ssh_config中的“IdentityFile”依然是“~/.ssh/github_rsa”。
而重装后的密匙文件的存放路径（C:\Users\Administrator\.ssh）下，有四个密匙文件，分别是github_rsa和github_rsa.pub，id_rsa和id_rsa.pub，
这样，用户就不用自己新建密匙文件了，只用将“github_rsa.pub”中的内容上传到Github网站的个人SSH管理中即可。
之后，在本地与Remote端进行网络连通性测试，发现可以联通。
这样，考虑到修改软件原有配置信息所带来的隐患，笔者就不推荐自己手动修改SSH的配置文件ssh_config中的“IdentityFile”字段这个方法了。


【解决方法】
方法一：
   在生成新的密匙文件后，若新生成的密匙文件名字为“id_rsa”，则将ssh_config配置文件中的“IdentityFile”项的值改为“~/.ssh/id_rsa”
方法二：
    将新生成的密匙文件名字改为“github_rsa”，从而与ssh_config配置文件中的“IdentityFile”项的值相同。
方法三：
    重装Github for Window 2.0，不用新建密匙文件，而是用Github自带的“github_rsa.pub”文件。
总之，不论方法一，放法二还是方法三，一定要保持新生成的密匙文件的名字同“ssh_config”中“IdentityFile”字段的值一致即可。

【参考文档】
(1)原文链接：http://stackoverflow.com/questions/2127104/permission-denied-publickey-error-using-git-on-windows-7

http://blog.itpub.net/25851087/viewspace-1262468/

事天@Tinkering-ST MINGW32 /g/cygwin64/home/demo_a (master)
$ git remote add origin git@github.com:Shitian2018/Files.git
fatal: remote origin already exists.

事天@Tinkering-ST MINGW32 /g/cygwin64/home/demo_a (master)
$ git push -u origin master
Counting objects: 29, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (26/26), done.
Writing objects: 100% (29/29), 7.72 KiB | 718.00 KiB/s, done.
Total 29 (delta 10), reused 0 (delta 0)
remote: Resolving deltas: 100% (10/10), done.
To github.com:Shitian2018/Files.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

中文设置的问题

修改中文显示问题 “ modified:   "git \345\221\275\344\273\244.txt"
git config --global core.quotepath false